// üëâ Cria uma vari√°vel idade e outra chamada temCarteira (boolean).
// Usa operador l√≥gico (&&) pra verificar se a pessoa tem 18 anos ou mais e tem carteira.
// Mostra ‚ÄúPode dirigir!‚Äù ou ‚ÄúN√£o pode dirigir!‚Äù.

let idade = 18;
let temCarteira = true;

if (idade >= 18 && temCarteira == true) {
    console.log("Voc√™ pode dirigir!")
} else {
    console.log("Voc√™ n√£o pode dirigir.")
}


// üëâ Cria duas vari√°veis numero1 e numero2.
// Usa operadores de compara√ß√£o (>=, <=, !==) pra mostrar no console:
// Se numero1 √© maior ou igual a numero2
// Se numero1 √© diferente de numero2

let numero1 = "n";
let numero2 = 8;

if (numero1 >= numero2) {
    console.log(`O n√∫mero ${numero1} √© maior que o n√∫mero ${numero2}`)
} else if (numero1 <= numero2) {
    console.log(`O n√∫mero ${numero1} √© menor que o n√∫mero ${numero2}`)
} else if (numero1 !== numero2) {
    console.log(`O n√∫mero ${numero1} √© diferente do n√∫mero ${numero2}`)
}



// üëâ Cria uma vari√°vel contador = 1.
// Usa while pra contar at√© 5 (inclusive), mostrando cada n√∫mero no console.

let contador = 1;

while (contador <= 5) {
    console.log(contador);
    contador ++;
}

// üëâ Pede ao usu√°rio um n√∫mero maior que 0.
// Se o n√∫mero for menor ou igual a 0, pede novamente, at√© digitar corretamente.
// Usa do...while!

const prompt = require('prompt-sync') ();

let digiteNumero = 0;


do {

    digiteNumero = parseInt(prompt("Digite um n√∫mero maior que 0: "));
    
    console.log(`Voc√™ digitou o n√∫mero ${digiteNumero}`);

} while (digiteNumero <= 0)


// üëâ Cria uma arrow function chamada dobro que recebe um n√∫mero e retorna esse n√∫mero multiplicado por 2.
// Exibe o resultado chamando a fun√ß√£o.

const dobro = (numero) => numero * 2

console.log(dobro(5));

// üëâ Cria uma fun√ß√£o an√¥nima que soma dois n√∫meros e atribui ela a uma vari√°vel chamada somar.
// Depois chama somar(3, 4) e mostra o resultado.

const somar = function (numero1, numero2) {
    return numero1 + numero2;
}

console.log(somar(2,2));

// üëâ Cria uma vari√°vel global chamada mensagem = "Oi".
// Dentro de uma fun√ß√£o chamada alteraMensagem, cria uma vari√°vel com mesmo nome mensagem = "Ol√°".
// Chama a fun√ß√£o e mostra no console a mensagem dentro e fora da fun√ß√£o (pra ver a diferen√ßa de escopo).

let mensagem = "Oi";

function alteraMensagem () {
    let mensagem =  "Ol√°";

    console.log(mensagem);
}
console.log(mensagem);
alteraMensagem();

// üëâ Pede ao usu√°rio (via prompt) dois n√∫meros: inicio e fim.
// Com while, mostra todos os n√∫meros do intervalo que s√£o pares e maiores que 10.
// Usa operador l√≥gico (&&) pra fazer essa verifica√ß√£o.

const prompt = require('prompt-sync') ();

let digiteInicio = parseInt(prompt("Digite o in√≠cio do intervalo: "));
let digiteFim = parseInt(prompt("Digite o fim do intervalo: "));
let condi√ß√£o = true;

while (condi√ß√£o) {

    if (digiteInicio < digiteFim) {
        for (let i = digiteInicio; i <= digiteFim; i ++) {
            if(i % 2 === 0 && i >= 10){
                console.log(i);
            }
        }
    } else {
         for (let i = digiteInicio; i >= digiteFim; i --) {
            if(i % 2 === 0 && i >= 10){
                console.log(i);
            }
        }
    }

    condi√ß√£o = false;
}

// üëâ Cria uma fun√ß√£o chamada calculadora que recebe dois n√∫meros e uma opera√ß√£o (‚Äò+‚Äô, ‚Äò-‚Äô, ‚Äò*‚Äô, ‚Äò/‚Äô).
// Usa switch/case pra decidir qual opera√ß√£o fazer e retorna o resultado.
// Chama a fun√ß√£o e exibe o resultado.

const prompt = require('prompt-sync') ();

let digiteNumero1 = parseInt(prompt("Digite o primeiro n√∫mero: "));
let digiteNumero2 = parseInt(prompt("Digite o segundo n√∫mero: "));
let digiteOperacao = prompt("Digite uma opera√ß√£o (+, -, *, /): "); 

function calculadora (numero1, numero2, operacao) {

    switch (operacao) {

        case '+': 
            return numero1 + numero2;
            break;

        case '-':
            return numero1 - numero2;
            break;
        
        case '*':
            return numero1 * numero2;
            break;
        
        case '/':
            return numero1 / numero2;
            break;
            
        default: 
            return `Voc√™ inseriu caracteres inv√°lidos!`;
            break;
    }

}


console.log(calculadora(digiteNumero1, digiteNumero2, digiteOperacao));

